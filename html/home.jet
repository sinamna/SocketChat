<!doctype html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport">
    <title>Home</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-wEmeIV1mKuiNpC+IOBjI7aAzPcEZeedi5yW5f2yOq55WWLwNGmvvx4Um1vskeMj0" crossorigin="anonymous">
    <style>
        .chatbox{
             outline: 1px solid silver;
            min-height: 160px;
            padding: 0.5em;
        }
    </style>
</head>
<body>
<div class="container">
    <div class="row">
        <div class="col">
            <h1 class="mt-3" >SocketChat Chiz</h1>
            <hr>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            <h3>Chat</h3>

            <div class="form-group">
                <label for="username" >Username:</label>
                <input type="text" class="form-control" name="username" id="username" autocomplete="off">
            </div>

            <div class="form-group">
                <label for="message" >Message:</label>
                <input type="text" class="form-control" name="message" id="message" autocomplete="off">
            </div>
            <hr>

            <a href="javascript:void(0);" class="btn btn-outline-secondary" id="sendBtn">Send Message</a>

            <hr>
            <input type="hidden" name="action" id="action">
            <div id="output" class="chatbox">

            </div>
        </div>
        <div class="col-md-4">
            <h3>Online Users</h3>
            <ul id="online_users"></ul>
        </div>

    </div>
</div>
</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-p34f1UUtsS3wqzfto5wAAmdvj+osOnFyQFpp4Ua3gs/ZVWx6oOypYoCJhGGScy+8" crossorigin="anonymous"></script>
<script>
    let socket = null;

    document.addEventListener("DOMContentLoaded", function(){
        socket = new WebSocket("ws://127.0.0.1:8080/ws")
        let userField = document.getElementById("username")
        let message = document.getElementById("message")
        socket.onopen = () => {
            console.log("successfully connected")
        }

        socket.onclose= ()=>{
            console.log("connection closed.")
        }

        socket.onerror = error => {
            console.log("an error occurred.")
        }
        let chatBox = document.getElementById("output")
        socket.onmessage = msg =>{
            let parsedData = JSON.parse(msg.data);
            switch (parsedData.action){
                case "connected_users":
                    let ul = document.getElementById("online_users")
                    while(ul.firstChild) ul.removeChild(ul.firstChild)

                    if(parsedData.connected_users.length>0 ){
                        parsedData.connected_users.forEach(function(item){
                            let li = document.createElement("li")
                            li.appendChild(document.createTextNode(item))
                            ul.appendChild(li)
                        })
                    }
                    break;
                case "broadcast":
                    chatBox.innerHTML = chatBox.innerHTML + parsedData.message + "<br>";
                    break;
            }
        }


        userField.addEventListener("change",function(){
            let dataToSend={};
            dataToSend["action"]= "username";
            dataToSend["username"] = this.value;
            socket.send(JSON.stringify(dataToSend));
        });

        //reloading page without restarting application causes an error in displaying online users
        window.onbeforeunload = function(){
            console.log("leaving the page")
            let dataToSend = {};
            dataToSend["action"] = "left";
            socket.send(JSON.stringify(dataToSend));
        }

        message.addEventListener("keydown",function(event){
            if(event.code == "Enter"){
                if(!socket){
                    console.log("no connection baby")
                    return false
                }

                if ((userField.value ==="")||(message.value === "")){
                    alert("fill all fields.")
                    return false;
                }
                event.preventDefault()
                event.stopPropagation()
                sendMessage()
            }
        })


        document.getElementById("sendBtn").addEventListener("click", function(){
            if ((userField.value ==="")||(message.value === "")){
                alert("fill all fields.")
                return false;
            }else{
                sendMessage()
            }
        });
    });
    function sendMessage(){
        let dataToSend = {};
        dataToSend["action"] = "broadcast"
        dataToSend["username"] = document.getElementById("username").value;
        dataToSend["message"] = document.getElementById("message").value;
        socket.send(JSON.stringify(dataToSend));
        document.getElementById("message").value = "";

    }
</script>
</html>